{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toledo\\\\Desktop\\\\ProjetoGIT\\\\costs\\\\src\\\\components\\\\project\\\\ProjectForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Input from '../form/Input';\nimport Select from '../form/Select';\nimport SubmitButton from '../form/SubmitButton';\nimport styles from './ProjectForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectForm(_ref) {\n  _s();\n  let {\n    btnText\n  } = _ref;\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/categories\", {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(data => {\n      setCategories(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      text: \"Nome do projeto\",\n      name: \"name\",\n      placeholder: \"Insira o Nome do projeto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"number\",\n      text: \"Or\\xE7amento do projeto\",\n      name: \"budget\",\n      placeholder: \"Insira o or\\xE7amento total\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      name: \"category_id\",\n      text: \"Selecione a categoria\",\n      options: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n      text: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectForm, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = ProjectForm;\nexport default ProjectForm;\nvar _c;\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["React","useState","useEffect","Input","Select","SubmitButton","styles","jsxDEV","_jsxDEV","ProjectForm","_ref","_s","btnText","categories","setCategories","fetch","method","headers","then","resp","json","data","catch","err","console","log","className","form","children","type","text","name","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["C:/Users/Toledo/Desktop/ProjetoGIT/costs/src/components/project/ProjectForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Input from '../form/Input';\r\nimport Select from '../form/Select';\r\nimport SubmitButton from '../form/SubmitButton';\r\nimport styles from './ProjectForm.module.css';\r\n\r\nfunction ProjectForm({ btnText }) {\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/categories\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        setCategories(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <form className={styles.form}>\r\n      <Input\r\n        type=\"text\"\r\n        text=\"Nome do projeto\"\r\n        name=\"name\"\r\n        placeholder=\"Insira o Nome do projeto\"\r\n      />\r\n\r\n      <Input\r\n        type=\"number\"\r\n        text=\"Orçamento do projeto\"\r\n        name=\"budget\"\r\n        placeholder=\"Insira o orçamento total\"\r\n      />\r\n\r\n      <Select\r\n        name=\"category_id\"\r\n        text=\"Selecione a categoria\"\r\n        options={categories}\r\n      />\r\n\r\n      <SubmitButton text={btnText} />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProjectForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,WAAWA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,kCAAkC,EAAE;MACxCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CAAEG,IAAI,IAAK;MACdP,aAAa,CAACO,IAAI,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAMkB,SAAS,EAAEpB,MAAM,CAACqB,IAAK;IAAAC,QAAA,gBAC3BpB,OAAA,CAACL,KAAK;MACJ0B,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,iBAAiB;MACtBC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eAEF5B,OAAA,CAACL,KAAK;MACJ0B,IAAI,EAAC,QAAQ;MACbC,IAAI,EAAC,yBAAsB;MAC3BC,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eAEF5B,OAAA,CAACJ,MAAM;MACL2B,IAAI,EAAC,aAAa;MAClBD,IAAI,EAAC,uBAAuB;MAC5BO,OAAO,EAAExB;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAEF5B,OAAA,CAACH,YAAY;MAACyB,IAAI,EAAElB;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEX;AAACzB,EAAA,CA1CQF,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AA4CpB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}